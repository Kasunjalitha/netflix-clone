[{"C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\test-react - Copy\\src\\index.js":"1","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\test-react - Copy\\src\\reportWebVitals.js":"2","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\test-react - Copy\\src\\App.js":"3","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\index.js":"4","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\App.js":"5","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\reportWebVitals.js":"6","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\Components\\Row.js":"7","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\Components\\Banner.js":"8","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\Components\\Nav.js":"9","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\Components\\Footer.js":"10"},{"size":455,"mtime":1609225256385,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":528,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":455,"mtime":1609225256385,"results":"15","hashOfConfig":"16"},{"size":1377,"mtime":1622808148144,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1340,"mtime":1619153627019,"results":"19","hashOfConfig":"16"},{"size":1398,"mtime":1619145929707,"results":"20","hashOfConfig":"16"},{"size":722,"mtime":1619078150405,"results":"21","hashOfConfig":"16"},{"size":1141,"mtime":1622809574154,"results":"22","hashOfConfig":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1mq9863",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"653p5i",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\test-react - Copy\\src\\index.js",[],["48","49"],"C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\test-react - Copy\\src\\reportWebVitals.js",[],"C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\test-react - Copy\\src\\App.js",[],"C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\index.js",[],["50","51"],"C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\App.js",[],"C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\Components\\Row.js",["52","53","54","55","56","57"],"import React, {useState, useEffect} from 'react';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nfunction Row(props){\r\n    const imgBaseURL = 'http://image.tmdb.org/t/p/original/';\r\n    const fetchBaseURL = 'https://api.themoviedb.org/3';\r\n    \r\n    const [movies, setMovies] = useState([]);\r\n    const [videoURL, setVideoURL] = useState('');\r\n\r\n    useEffect(async () => {\r\n        const response = await fetch(`${fetchBaseURL}${props.fetchURL}`);\r\n        const data = await response.json();\r\n        setMovies(data.results);\r\n        return data;\r\n    }, [props.fetchURL]);\r\n\r\n    const handleClick = (movie) => {\r\n        console.log(movie);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n           <h3 className=\"movie-header\">{props.title}</h3>\r\n           <div className=\"row_posters\">\r\n            {movies.map((movie) => {\r\n                return (\r\n                    <img \r\n                        onClick={() => handleClick(movie)} \r\n                        key={movie.id} \r\n                        className=\"row_poster\" \r\n                        src={`${imgBaseURL}${props.isLargeRow? movie.poster_path: movie.backdrop_path}`}\r\n                    />\r\n                )\r\n             })  \r\n            }\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\Components\\Banner.js",["58","59"],"import React, { useEffect, useState } from 'react';\r\nimport './Banner.css';\r\n\r\nfunction Banner(props){\r\n    const fetchBaseURL = 'https://api.themoviedb.org/3';\r\n    const imgBaseURL = 'http://image.tmdb.org/t/p/original/';\r\n\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        const response = await fetch(`${fetchBaseURL}${props.fetchURL}`);\r\n        const data = await response.json();\r\n        setMovie(data.results[Math.floor(Math.random()* 19)]);\r\n        return data;\r\n    }, []);\r\n\r\n    // console.log(movie);\r\n    function truncate(str, n){\r\n        return str?.length>n? str.substr(0, n-1) + \"...\" : str; \r\n    }\r\n\r\n    return (\r\n        <header \r\n            className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(${imgBaseURL}${movie.backdrop_path})`,\r\n                backgroundPosition: \"center center\"\r\n            }}\r\n        >\r\n            <div className=\"banner-content\">\r\n                <h2 className=\"banner-title\">{movie.name}</h2>\r\n                <button className=\"banner-btn\">Play</button>\r\n                <button className=\"banner-btn\">My List</button>\r\n                <p className=\"banner-movie-info\">{truncate(movie?.overview, 150)}</p>\r\n            </div>\r\n \r\n            <div className=\"fade-bottom\"></div>    \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner;","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\Components\\Nav.js",["60"],"import React, {useState ,useEffect} from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav(){\r\n    const [handleShow, sethandleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', ()=>{\r\n            if(window.scrollY > 60){\r\n                sethandleShow(true);\r\n            }else{\r\n                sethandleShow(false)\r\n            }\r\n        });\r\n        return () => {\r\n            window.removeEventListener('scroll');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${handleShow && \"make-black\"}`}>\r\n            <img className=\"netflix-logo\" src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","C:\\Users\\Kasun\\Desktop\\HTML_CSS\\React\\netflix-clone\\src\\Components\\Footer.js",["61","62","63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":15},{"ruleId":"71","severity":1,"message":"75","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":20},{"ruleId":"71","severity":1,"message":"76","line":11,"column":12,"nodeType":"73","messageId":"74","endLine":11,"endColumn":20},{"ruleId":"71","severity":1,"message":"77","line":11,"column":22,"nodeType":"73","messageId":"74","endLine":11,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":13,"column":15,"nodeType":"80","endLine":18,"endColumn":6},{"ruleId":"81","severity":1,"message":"82","line":30,"column":21,"nodeType":"83","endLine":35,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":10,"column":15,"nodeType":"80","endLine":15,"endColumn":6},{"ruleId":"78","severity":1,"message":"84","line":15,"column":8,"nodeType":"85","endLine":15,"endColumn":10,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"82","line":21,"column":13,"nodeType":"83","endLine":21,"endColumn":113},{"ruleId":"87","severity":1,"message":"88","line":13,"column":60,"nodeType":"89","endLine":13,"endColumn":75},{"ruleId":"87","severity":1,"message":"88","line":17,"column":49,"nodeType":"89","endLine":17,"endColumn":64},{"ruleId":"87","severity":1,"message":"88","line":22,"column":9,"nodeType":"89","endLine":22,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":26,"column":7,"nodeType":"83","endLine":26,"endColumn":35},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],"no-unused-vars","'YouTube' is defined but never used.","Identifier","unusedVar","'movieTrailer' is defined but never used.","'videoURL' is assigned a value but never used.","'setVideoURL' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.fetchURL'. Either include it or remove the dependency array.","ArrayExpression",["94"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [props.fetchURL]",{"range":"97","text":"98"},[516,518],"[props.fetchURL]"]